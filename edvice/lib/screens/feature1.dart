import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:video_player/video_player.dart';
import 'package:flutter_html/flutter_html.dart';
import 'package:flutter_highlight/flutter_highlight.dart';
import 'package:flutter_highlight/themes/github.dart';

class SmartNotesPage extends StatefulWidget {
  @override
  _SmartNotesPageState createState() => _SmartNotesPageState();
}

class _SmartNotesPageState extends State<SmartNotesPage> {
  // Controller for video player
  late VideoPlayerController _videoController;
  bool _isVideoPlaying = false;

  // Auto-generated notes (mocked data, replace with dynamic API response)
  String _autoGeneratedNotes = """
    1. Flutter: Google's UI toolkit.
    2. Widgets in Flutter: Building blocks of the interface.
    3. State Management: Essential for interactive apps.
    """;

  List<String> _highlightedNotes = [];

  @override
  void initState() {
    super.initState();
    _initializeVideoPlayer();
    _loadHighlightedNotes(); // Load saved highlights from local storage
  }

  // Initialize video player with a local video or remote URL
  void _initializeVideoPlayer() {
    _videoController = VideoPlayerController.network(
      'https://www.example.com/sample_lecture.mp4'
    )..initialize().then((_) {
        setState(() {});
      });
  }

  @override
  void dispose() {
    _videoController.dispose();
    super.dispose();
  }

  // Function to toggle video play/pause
  void _toggleVideoPlay() {
    setState(() {
      _isVideoPlaying
          ? _videoController.pause()
          : _videoController.play();
      _isVideoPlaying = !_isVideoPlaying;
    });
  }

  // Function to highlight a section of notes
  void _highlightText(String text) {
    setState(() {
      if (!_highlightedNotes.contains(text)) {
        _highlightedNotes.add(text);
        _saveHighlightedNotes(); // Save the new highlight to storage
      }
    });
  }

  // Function to load highlights from local storage
  void _loadHighlightedNotes() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      _highlightedNotes = prefs.getStringList('highlightedNotes') ?? [];
    });
  }

  // Function to save highlights to local storage
  void _saveHighlightedNotes() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    prefs.setStringList('highlightedNotes', _highlightedNotes);
  }

  // Function to display the summary of highlighted points
  void _showSummaryDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: Text('Summary of Key Points'),
          content: Text(_highlightedNotes.join("\n")),
          actions: [
            TextButton(
              onPressed: () => Navigator.of(context).pop(),
              child: Text('Close')
            ),
          ],
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Smart Notes & Highlighting'),
        actions: [
          IconButton(
            icon: Icon(Icons.summarize),
            onPressed: () => _showSummaryDialog(context),
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Video Player
            if (_videoController.value.isInitialized)
              AspectRatio(
                aspectRatio: _videoController.value.aspectRatio,
                child: VideoPlayer(_videoController),
              ),
            SizedBox(height: 16.0),
            ElevatedButton(
              onPressed: _toggleVideoPlay,
              child: Text(_isVideoPlaying ? 'Pause Lecture' : 'Play Lecture'),
            ),
            Divider(height: 30),
            
            // Auto-Generated Notes
            Text('Auto-Generated Notes', style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
            SizedBox(height: 10),
            Html(
              data: _autoGeneratedNotes,
              onLinkTap: (url, context, attributes) {
                _highlightText(url!);  // Highlighting clicked text
              },
              style: {
                "body": Style(fontSize: FontSize(16.0)),
              },
            ),
            Divider(height: 30),
            
            // Highlighted Text Section
            Text('Highlighted Key Points', style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
            SizedBox(height: 10),
            if (_highlightedNotes.isNotEmpty)
              HighlightView(
                _highlightedNotes.join("\n"),
                language: 'plaintext',
                theme: githubTheme,
                padding: const EdgeInsets.all(12),
                textStyle: TextStyle(fontSize: 16),
              ),
            if (_highlightedNotes.isEmpty)
              Text('No highlights yet', style: TextStyle(color: Colors.grey)),
          ],
        ),
      ),
    );
  }
}
